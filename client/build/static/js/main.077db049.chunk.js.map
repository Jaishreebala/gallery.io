{"version":3,"sources":["images/logo-green-bg.svg","components/NotLoggedIn.js","components/LoggedIn.js","components/Nav.js","components/Error.js","images/home-logo.svg","pages/Login.js","pages/Register.js","images/empty_star.svg","images/filled_star.svg","components/Imagecard.js","pages/Feed.js","components/UserImageCard.js","pages/UserFeed.js","pages/Photo.js","pages/Post.js","components/ProfileCard.js","pages/Profile.js","App.js","reportWebVitals.js","index.js"],"names":["NotLoggedIn","location","className","pathname","to","LoggedIn","setIsLoggedIn","isLoggedIn","logOutHandler","a","fetch","response","json","success","console","log","onClick","Nav","useLocation","id","src","LogoGreen","alt","Error","error","Login","useState","errors","setErrors","inputEmail","useRef","inputPassword","loginHandler","e","preventDefault","method","body","JSON","stringify","email","current","value","password","headers","data","localStorage","setItem","token","logoNoBg","ref","type","name","required","Register","inputFirstName","inputLastName","firstName","lastName","Imagecard","photographer","photo","rating","description","tags","photographerId","ratingRenderer","i","Math","round","parseInt","push","filledStar","emptyStar","starRenderer","process","Feed","photosData","setPhotosData","query","useEffect","getPhotos","bearer","getItem","withCredentials","credentials","map","photoData","_id","user","workType","averageRating","UserImageCard","href","download","UserFeed","useParams","images","Photo","history","useHistory","setPhotoData","userRating","setUserRating","rerender","setRerender","setQuery","commentRef","loadPhoto","submitCommentHandler","length","comment","submitReviewHandler","comments","placeholder","onMouseOver","index","mouseOverStar","onMouseLeave","Post","pictures","setPictures","uploadpictureHandler","bodydata","FormData","append","withIcon","onChange","picture","imgExtension","maxFileSize","withPreview","singleImage","label","ProfileCard","deletePictureHandler","Profile","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.077db049.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-green-bg.f0cefb14.svg\";","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nfunction NotLoggedIn({ location }) {\n    return (\n        <ul>\n            <li className={location.pathname === \"/login\" ? \"selected\" : \"\"}><Link to=\"/login\">Log In</Link></li>\n            <li className={location.pathname === \"/register\" ? \"selected\" : \"\"}><Link to=\"/register\">Sign Up</Link></li>\n        </ul>\n    )\n}\n\nexport default NotLoggedIn\n","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nfunction LoggedIn({ location, isLoggedIn, setIsLoggedIn }) {\n    const logOutHandler = async () => {\n        try {\n            const response = await fetch(\"/api/v1/auth/logout\")\n            const data = await response.json();\n            if (data.success) {\n                setIsLoggedIn(false);\n            }\n        } catch (err) {\n            console.log(err)\n        }\n    }\n    return (\n        <ul>\n            <li className={location.pathname === \"/feed\" ? \"selected\" : \"\"}><Link to=\"/feed\">Feed</Link></li>\n            <li className={location.pathname === \"/post\" ? \"selected\" : \"\"}><Link to=\"/post\">Post</Link></li>\n            <li className={location.pathname === \"/logout\" ? \"selected\" : \"\"} onClick={logOutHandler}>Logout</li>\n        </ul>\n    )\n}\n\nexport default LoggedIn\n","import React from 'react'\nimport LogoGreen from '../images/logo-green-bg.svg'\nimport { useLocation } from 'react-router-dom';\nimport NotLoggedIn from './NotLoggedIn';\nimport LoggedIn from './LoggedIn';\n\nfunction Nav({ isLoggedIn, setIsLoggedIn }) {\n    const location = useLocation();\n\n    return (\n        <div className='nav'>\n            <div id=\"logo\">\n                <img src={LogoGreen} alt=\"Logo\" />\n                Gallery.io\n            </div>\n            <nav>\n                {isLoggedIn ? <LoggedIn location={location} isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} /> : <NotLoggedIn location={location} />}\n            </nav>\n        </div>\n    )\n}\n\nexport default Nav\n","import React from 'react'\n\nfunction Error({ error }) {\n    return (\n        <div className=\"error\">\n            {error}\n        </div>\n    )\n}\n\nexport default Error\n","export default __webpack_public_path__ + \"static/media/home-logo.b3518718.svg\";","import React, { useRef, useState } from 'react'\nimport Error from '../components/Error';\nimport { Link, Redirect } from 'react-router-dom'\nimport logoNoBg from '../images/home-logo.svg';\n\n\nfunction Login({ isLoggedIn, setIsLoggedIn }) {\n    const [errors, setErrors] = useState(\"\");\n    const inputEmail = useRef();\n    const inputPassword = useRef();\n    const loginHandler = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await fetch(\"/api/v1/auth/login\", {\n                method: \"POST\",\n                body: JSON.stringify({\n                    email: inputEmail.current.value,\n                    password: inputPassword.current.value\n                }),\n                headers: {\n                    \"Content-type\": \"application/json; charset=UTF-8\"\n                }\n            })\n            const data = await response.json();\n            if (data.success) {\n                setErrors(\"\");\n                setIsLoggedIn(true);\n                localStorage.setItem('token', data.token)\n            }\n            else {\n                setIsLoggedIn(false);\n                setErrors(data.error);\n            }\n        } catch (err) {\n            console.log(err)\n        }\n\n    }\n    return (\n        <div className=\"login\">\n            {isLoggedIn ? <Redirect to=\"/feed\" /> : \"\"}\n            <img src={logoNoBg} alt=\"Main Logo\" />\n            <form className=\"login-form\">\n                <h1>Login To Your Gallery.io Account</h1>\n                <Error error={errors} />\n                <div className=\"searchInput\">\n                    <input ref={inputEmail} type=\"text\" name=\"email\" required />\n                    <label className=\"label-name\"> <span className=\"content-name\">\n                        Email\n                </span>\n                    </label>\n                </div>\n                <div className=\"searchInput\">\n                    <input ref={inputPassword} type=\"password\" name=\"password\" required />\n                    <label className=\"label-name\"> <span className=\"content-name\">\n                        Password\n                </span>\n                    </label>\n                </div>\n                <button onClick={loginHandler} className=\"button\">Login</button>\n                <div className=\"links borderTop\">Don't Have An Accout? <b>\n                    <Link to=\"/register\">Sign Up</Link>\n                </b></div>\n            </form>\n        </div>\n    )\n}\n\nexport default Login\n","import React, { useRef, useState } from 'react'\nimport Error from '../components/Error';\nimport { Link, Redirect } from 'react-router-dom'\nimport logoNoBg from '../images/home-logo.svg';\n\nfunction Register({ isLoggedIn, setIsLoggedIn }) {\n    const [errors, setErrors] = useState(\"\");\n    const inputEmail = useRef();\n    const inputPassword = useRef();\n    const inputFirstName = useRef();\n    const inputLastName = useRef();\n    const loginHandler = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await fetch(\"/api/v1/auth/register\", {\n                method: \"POST\",\n                body: JSON.stringify({\n                    firstName: inputFirstName.current.value,\n                    lastName: inputLastName.current.value,\n                    email: inputEmail.current.value,\n                    password: inputPassword.current.value\n                }),\n                headers: {\n                    \"Content-type\": \"application/json; charset=UTF-8\"\n                }\n            })\n            const data = await response.json();\n            if (data.success) {\n                setErrors(\"\");\n                setIsLoggedIn(true);\n            }\n            else {\n                setIsLoggedIn(false);\n                setErrors(data.error);\n            }\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    return (\n        <div className=\"login\">\n            {isLoggedIn ? <Redirect to=\"/feed\" /> : \"\"}\n            <img src={logoNoBg} alt=\"Main Logo\" />\n            <form className=\"login-form\">\n                <h1>Create Your Gallery.io Account</h1>\n                <Error error={errors} />\n                <div className=\"searchInput\">\n                    <input ref={inputFirstName} type=\"text\" name=\"firstName\" required />\n                    <label className=\"label-name\"> <span className=\"content-name\">\n                        First Name\n                    </span>\n                    </label>\n                </div>\n                <div className=\"searchInput\">\n                    <input ref={inputLastName} type=\"text\" name=\"lastName\" required />\n                    <label className=\"label-name\"> <span className=\"content-name\">\n                        Last Name\n                    </span>\n                    </label>\n                </div>\n                <div className=\"searchInput\">\n                    <input ref={inputEmail} type=\"text\" name=\"email\" required />\n                    <label className=\"label-name\"> <span className=\"content-name\">\n                        Email\n                    </span>\n                    </label>\n                </div>\n                <div className=\"searchInput\">\n                    <input ref={inputPassword} type=\"password\" name=\"password\" required />\n                    <label className=\"label-name\"> <span className=\"content-name\">\n                        Password\n                    </span>\n                    </label>\n                </div>\n                <button onClick={loginHandler} className=\"button marginTop\">Register</button>\n                <div className=\"links borderTop\">Already Have An Accout? <b>\n                    <Link to=\"/login\">Log In</Link>\n                </b></div>\n            </form>\n        </div>\n    )\n}\n\nexport default Register\n","export default __webpack_public_path__ + \"static/media/empty_star.a393f159.svg\";","export default __webpack_public_path__ + \"static/media/filled_star.4350e984.svg\";","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport emptyStar from '../images/empty_star.svg';\nimport filledStar from '../images/filled_star.svg';\nfunction Imagecard({ id, photographer, photo, description, tags, rating, photographerId }) {\n    const starRenderer = () => {\n        let ratingRenderer = [];\n        for (let i = 0; i < 5; i++) {\n            if (i < Math.round(parseInt(rating))) {\n                ratingRenderer.push(<img key={i} src={filledStar} alt=\"filled star\" />)\n            }\n            else {\n                ratingRenderer.push(<img key={i} src={emptyStar} alt=\"empty star\" />)\n            }\n        }\n        return ratingRenderer;\n    }\n\n    return (\n        <div className=\"imageCard\">\n            <div className=\"card-desc\">\n                <Link to={`/feed/${photographerId}`}>{photographer}</Link>\n                <div className=\"star\"> {starRenderer()}</div>\n            </div>\n            <Link to={`/photo/${id}`}><img src={`${process.env.PUBLIC_URL}/uploadedImages/${photo}`} alt=\"Image\" /></Link>\n        </div>\n    )\n}\n\nexport default Imagecard\n","import React, { useState, useEffect } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport ImageCard from '../components/Imagecard'\nfunction Feed({ isLoggedIn }) {\n    const [photosData, setPhotosData] = useState([]);\n    const [query, setQuery] = useState(`api/v1/photo`);\n\n    useEffect(() => {\n        getPhotos();\n    }, [query])\n    const bearer = `Bearer ${localStorage.getItem('token')}`\n    console.log(bearer)\n    const getPhotos = async () => {\n        try {\n            const response = await fetch(query, {\n                method: 'GET',\n                withCredentials: true,\n                credentials: 'include',\n                headers: {\n                    'Authorization': bearer,\n                    'Content-Type': 'application/json'\n                }\n            })\n            const data = await response.json();\n            setPhotosData(data.data);\n            console.log(data)\n        } catch (err) {\n            console.log(err)\n        }\n\n    }\n    return (\n\n        <div className=\"feed\">\n            {!isLoggedIn ? <Redirect to=\"/login\" /> : \"\"}\n            {\n                photosData.map(photoData => { return <ImageCard key={photoData._id} id={photoData._id} photographerId={photoData.user._id} photographer={`${photoData.user.firstName} ${photoData.user.lastName}`} photo={photoData.photo} description={photoData.description} tags={photoData.workType} rating={photoData.averageRating} /> })\n            }\n        </div>\n    )\n}\n\nexport default Feed\n","import React from 'react'\nimport emptyStar from '../images/empty_star.svg';\nimport filledStar from '../images/filled_star.svg';\n\nfunction UserImageCard({ id, photo, description, tags, rating }) {\n    const starRenderer = () => {\n        let ratingRenderer = [];\n        for (let i = 0; i < 5; i++) {\n            if (i < Math.round(parseInt(rating))) {\n                ratingRenderer.push(<img key={i} src={filledStar} alt=\"filled star\" />)\n            }\n            else {\n                ratingRenderer.push(<img key={i} src={emptyStar} alt=\"empty star\" />)\n            }\n        }\n        return ratingRenderer;\n    }\n\n    return (\n        <div className=\"imageCard\">\n            <div className=\"card-desc\">\n                <div className=\"star\"> {starRenderer()}</div>\n                <a href={`${process.env.PUBLIC_URL}/uploadedImages/${photo}`} download>Download</a>\n            </div>\n            <img src={`${process.env.PUBLIC_URL}/uploadedImages/${photo}`} alt=\"Image\" />\n        </div>\n    )\n}\n\nexport default UserImageCard\n","import React, { useState, useEffect } from 'react'\nimport { Redirect, Link } from 'react-router-dom'\nimport ImageCard from '../components/UserImageCard'\nimport { useParams } from 'react-router';\n\nfunction UserFeed({ isLoggedIn }) {\n    const { id } = useParams();\n\n    const [photosData, setPhotosData] = useState([]);\n    const [query, setQuery] = useState(`/api/v1/photo/user/${id}`);\n    useEffect(() => {\n        getPhotos();\n    }, [query])\n    const bearer = `Bearer ${localStorage.getItem('token')}`\n    console.log(bearer)\n    const getPhotos = async () => {\n        try {\n            const response = await fetch(query, {\n                method: 'GET',\n                withCredentials: true,\n                credentials: 'include',\n                headers: {\n                    'Authorization': bearer,\n                    'Content-Type': 'application/json'\n                }\n            })\n            const data = await response.json();\n            setPhotosData(data.data);\n            console.log(data)\n        } catch (err) {\n            console.log(err)\n        }\n\n    }\n\n    return (\n        <> {photosData.firstName && <>\n            <div className=\"heading\"><Link to={`/feed`}> Back</Link> <h1>Pictures uploaded by {photosData.firstName} {photosData.lastName}</h1></div>\n            <div className=\"feed\">\n                {!isLoggedIn ? <Redirect to=\"/login\" /> : \"\"}\n                {\n                    photosData.images.map(photoData => { return <ImageCard key={photoData._id} id={photoData._id} photo={photoData.photo} description={photoData.description} tags={photoData.workType} rating={photoData.averageRating} /> })\n                }\n            </div>\n        </>\n        }\n        </>\n    )\n}\n\nexport default UserFeed\n","import React, { useState, useEffect, useRef } from 'react'\nimport { useParams } from 'react-router';\nimport emptyStar from '../images/empty_star.svg';\nimport filledStar from '../images/filled_star.svg';\nimport { useHistory, Redirect } from 'react-router-dom'\nimport Error from '../components/Error';\n\nfunction Photo({ isLoggedIn }) {\n    const { id } = useParams();\n    const history = useHistory()\n    const [photoData, setPhotoData] = useState([]);\n    const [userRating, setUserRating] = useState([0, 0, 0, 0, 0]);\n    const [rerender, setRerender] = useState(false)\n    const [errors, setErrors] = useState(\"\");\n    const [query, setQuery] = useState(`/api/v1/photo/${id}`);\n\n    const bearer = `Bearer ${localStorage.getItem('token')}`\n    const commentRef = useRef();\n    useEffect(() => {\n        loadPhoto();\n    }, [query, rerender])\n    const loadPhoto = async () => {\n        try {\n            const response = await fetch(query, {\n                method: 'GET',\n                withCredentials: true,\n                credentials: 'include',\n                headers: {\n                    'Authorization': bearer,\n                    'Content-Type': 'application/json'\n                }\n            })\n            const data = await response.json();\n            setPhotoData(data.data);\n        } catch (err) {\n            console.log(err)\n        }\n    }\n    const starRenderer = (rating) => {\n        let ratingRenderer = [];\n        for (let i = 0; i < 5; i++) {\n            if (i < Math.round(parseInt(rating))) {\n                ratingRenderer.push(<img key={i} src={filledStar} alt=\"filled star\" />)\n            }\n            else {\n                ratingRenderer.push(<img key={i} src={emptyStar} alt=\"empty star\" />)\n            }\n        }\n        return ratingRenderer;\n    }\n    const submitCommentHandler = async () => {\n        if (isLoggedIn) {\n            if (commentRef.current.value.length) {\n                try {\n                    const response = await fetch(`/api/v1/comments/${id}`, {\n                        method: \"POST\",\n                        body: JSON.stringify({\n                            comment: commentRef.current.value\n                        }),\n                        headers: {\n                            'Authorization': bearer,\n                            'Content-Type': \"application/json; charset=UTF-8\"\n                        }\n                    })\n                    const data = await response.json();\n                    setErrors(\"\");\n                    if (data.success) {\n                        setQuery(query)\n                        setRerender(!rerender)\n                    }\n                    else {\n                        setErrors(data.error)\n                    }\n\n                } catch (err) {\n                    setErrors(err)\n                }\n            }\n            else {\n                setErrors(\"Comments can't be empty\")\n            }\n            commentRef.current.value = \"\"\n        }\n        else {\n            history.push(\"/login\");\n        }\n    }\n    const submitReviewHandler = async (rating) => {\n        if (isLoggedIn) {\n\n            try {\n                const response = await fetch(`/api/v1/comments/${id}`, {\n                    method: \"POST\",\n                    body: JSON.stringify({\n                        rating: rating\n                    }),\n                    headers: {\n                        'Authorization': bearer,\n                        \"Content-type\": \"application/json; charset=UTF-8\"\n                    }\n                })\n                const data = await response.json();\n                if (data.success) {\n                }\n            } catch (err) {\n                console.log(err)\n            }\n        } else {\n            history.push(\"/login\");\n        }\n    }\n    const mouseOverStar = (index) => {\n        for (let i = 0; i < 5; i++) {\n            if (i <= index) {\n                userRating[i] = 1;\n            }\n            else {\n                userRating[i] = 0;\n            }\n        }\n        setUserRating(userRating)\n        setRerender(!rerender)\n    }\n\n    return (\n        <>\n            {photoData.user &&\n                <div className=\"photo\">\n                    {!isLoggedIn ? <Redirect to=\"/login\" /> : \"\"}\n                    <img src={`${process.env.PUBLIC_URL}/uploadedImages/${photoData.photo}`} alt=\"Image\" />\n                    <div className=\"menu\">\n                        <div className=\"desc\"> {photoData.description} </div>\n                        <div className=\"user\"> Clicked By {photoData.user.firstName} {photoData.user.lastName}  </div>\n                        <div className=\"desc\"><a href={`${process.env.PUBLIC_URL}/uploadedImages/${photoData.photo}`} download>Download</a></div>\n                        <div className=\"star\"> {starRenderer(photoData.averageRating)}</div>\n                        <h1>Comments</h1>\n                        {photoData.comments.map(comment => {\n                            if (comment.comment) {\n                                return <div key={comment._id} className=\"comment\">\n                                    <div className=\"commentName\">\n                                        {comment.user.firstName} {comment.user.lastName}\n                                    </div>\n                                    <div className=\"commentDesc\">\n                                        {comment.comment}\n                                    </div>\n                                </div>\n                            }\n                            return \"\";\n                        }\n                        )}\n                        <div className=\"userInputSection\">\n                            <Error error={errors} />\n                            <div className=\"borderInput\">\n                                <input type=\"text\" placeholder=\"Leave A Comment\" ref={commentRef} />\n                                <div onClick={submitCommentHandler}>Post</div>\n                            </div>\n\n                            <div className=\"inputRating\">\n                                <span>Leave A Rating:</span>\n\n                                {userRating.map((rating, i) =>\n                                    <img onClick={() => submitReviewHandler(i + 1)}\n                                        onMouseOver={() => mouseOverStar(i)} key={i} src={rating ? filledStar : emptyStar}\n                                        onMouseLeave={() => {\n                                            setUserRating([0, 0, 0, 0, 0]); setRerender(!rerender);\n                                        }}\n                                        alt=\"empty star\" />)\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            }\n        </>\n    )\n}\n\nexport default Photo\n","import React, { useState, useRef } from 'react'\nimport ImageUploader from \"react-images-upload\";\nimport Error from '../components/Error';\nimport { useHistory, Link, Redirect } from 'react-router-dom'\n\n\n\nfunction Post({ isLoggedIn }) {\n    const [pictures, setPictures] = useState([]);\n    const [errors, setErrors] = useState(\"\");\n\n    const history = useHistory()\n    const description = useRef();\n    const tags = useRef();\n\n    const bearer = `Bearer ${localStorage.getItem('token')}`\n\n    const onDrop = picture => {\n        setPictures([picture]);\n    };\n    const uploadpictureHandler = async () => {\n        if (isLoggedIn) {\n            if (!pictures[0]) {\n                setErrors(\"Please Upload A Photo\");\n            } else\n                if (!(description.current.value.length > 0 && tags.current.value.length > 0)) {\n                    // console.log(description)\n                    // console.log(description.length)\n                    setErrors(\"Please add a description and tags for the photo.\");\n                }\n                else {\n                    console.log(\"succ ess\")\n                    try {\n                        let bodydata = new FormData();\n                        bodydata.append('photo', pictures[0][0])\n                        bodydata.append('description', description.current.value)\n                        bodydata.append('tags', tags.current.value)\n                        const response = await fetch(`api/v1/photo`, {\n                            method: \"POST\",\n                            body: bodydata,\n                            headers: {\n                                'Authorization': bearer\n                                // 'Content-Type': \"application/json; charset=UTF-8\"\n                            }\n                        })\n                        const data = await response.json();\n                        setErrors(\"\");\n                        if (data.success) {\n                            console.log(\"success\")\n                            history.push(\"/feed\");\n                        }\n                        else {\n                            setErrors(data.error)\n                        }\n\n                    } catch (err) {\n                        setErrors(err)\n                    }\n                }\n        }\n        else {\n            // history.push(\"/login\");\n        }\n    }\n    return (\n        <div className=\"post\">\n            {!isLoggedIn ? <Redirect to=\"/login\" /> : \"\"}\n            <h1> <Link to={`/profile`}> View My Profile</Link></h1>\n            <Error error={errors} />\n            <ImageUploader\n                name=\"photo\"\n                className=\"photo\"\n                withIcon={true}\n                onChange={onDrop}\n                imgExtension={[\".jpg\", \".gif\", \".png\", \".svg\"]}\n                maxFileSize={5242880}\n                withPreview={true}\n                singleImage={true}\n                label=\"Max file size: 5mb, accepted: jpg, gif, png, svg\"\n            />\n            <div className=\"textarea\">\n                <label className=\"label-name\"><span className=\"content-name\">\n                    Description*\n                            </span>\n                </label>\n                <textarea name=\"description\" id=\"description\" ref={description}>\n                </textarea>\n            </div>\n            <div className=\"searchInput\">\n                <input type=\"text\" name=\"text\" required ref={tags} />\n                <label className=\"label-name\">\n                    <span className=\"content-name\">\n                        Tags\n                    </span>\n                </label>\n            </div>\n            <div className=\"button\" onClick={uploadpictureHandler}>Post</div>\n        </div>\n    )\n}\n\nexport default Post\n","import React, { useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport emptyStar from '../images/empty_star.svg';\nimport filledStar from '../images/filled_star.svg';\n\nfunction ProfileCard({ id, photo, rating, isLoggedIn, rerender, setRerender }) {\n    const history = useHistory()\n\n    const bearer = `Bearer ${localStorage.getItem('token')}`\n\n    const starRenderer = () => {\n        let ratingRenderer = [];\n        for (let i = 0; i < 5; i++) {\n            if (i < Math.round(parseInt(rating))) {\n                ratingRenderer.push(<img key={i} src={filledStar} alt=\"filled star\" />)\n            }\n            else {\n                ratingRenderer.push(<img key={i} src={emptyStar} alt=\"empty star\" />)\n            }\n        }\n        return ratingRenderer;\n    }\n    const deletePictureHandler = async () => {\n        if (isLoggedIn) {\n\n            try {\n                const response = await fetch(`/api/v1/photo/${id}`, {\n                    method: \"DELETE\",\n                    headers: {\n                        'Authorization': bearer,\n                        'Content-Type': \"application/json; charset=UTF-8\"\n                    }\n                })\n                const data = await response.json();\n                if (data.success) {\n                    setRerender(!rerender);\n                    console.log(\"success\")\n                }\n\n            } catch (err) {\n                console.log(err);\n            }\n        }\n        else {\n            history.push(\"/login\");\n        }\n    }\n    return (\n        <div className=\"imageCard\">\n            <div className=\"card-desc\">\n                <div className=\"error\" onClick={deletePictureHandler}>Delete</div>\n                <div className=\"star\"> {starRenderer()}</div>\n            </div>\n            <Link to={`/photo/${id}`}><img src={`${process.env.PUBLIC_URL}/uploadedImages/${photo}`} alt=\"Image\" /></Link>\n        </div>\n    )\n}\n\nexport default ProfileCard\n","import React, { useState, useEffect } from 'react'\nimport { Redirect, Link } from 'react-router-dom'\nimport ImageCard from '../components/ProfileCard'\n\nfunction Profile({ isLoggedIn }) {\n\n    const [photosData, setPhotosData] = useState([]);\n    const [query, setQuery] = useState(`api/v1/auth/getMe`);\n    const [rerender, setRerender] = useState(false)\n\n    useEffect(() => {\n        getPhotos();\n    }, [query, rerender])\n    const bearer = `Bearer ${localStorage.getItem('token')}`\n    const getPhotos = async () => {\n        try {\n            const response = await fetch(query, {\n                method: 'GET',\n                withCredentials: true,\n                credentials: 'include',\n                headers: {\n                    'Authorization': bearer,\n                    'Content-Type': 'application/json'\n                }\n            })\n            const data = await response.json();\n            setPhotosData(data.data);\n            console.log(data)\n        } catch (err) {\n            console.log(err)\n        }\n\n    }\n    return (\n        <>{photosData.images &&\n            <div>\n                <div className=\"heading\"><Link to={`/post`}> Back</Link> <h1>My Profile: {photosData.firstName} {photosData.lastName}</h1> </div>\n                <div className=\"feed\">\n                    {!isLoggedIn ? <Redirect to=\"/login\" /> : \"\"}\n                    {\n                        photosData.images.map(photoData => { return <ImageCard key={photoData._id} id={photoData._id} isLoggedIn={isLoggedIn} photo={photoData.photo} rating={photoData.averageRating} rerender={rerender} setRerender={setRerender} /> })\n                    }\n                </div>\n            </div>}\n        </>\n    )\n}\n\nexport default Profile\n","import React, { useState } from 'react'\nimport './styles/app.scss'\nimport { Switch, Route, useLocation } from 'react-router-dom';\nimport Nav from './components/Nav';\nimport Login from './pages/Login'\nimport Register from './pages/Register'\nimport Feed from './pages/Feed'\nimport UserFeed from './pages/UserFeed'\nimport Photo from './pages/Photo'\nimport Post from './pages/Post'\nimport Profile from './pages/Profile'\n\nfunction App() {\n  const location = useLocation();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <Nav isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />\n      <Switch location={location} key={location.pathname}>\n        <Route path=\"/\" exact>\n          <Register isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />\n        </Route>\n        <Route path=\"/login\" exact>\n          <Login isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />\n        </Route>\n        <Route path=\"/register\" exact>\n          <Register isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />\n        </Route>\n        <Route path=\"/feed\" exact>\n          <Feed isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />\n        </Route>\n        <Route path=\"/feed/:id\" exact>\n          <UserFeed isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />\n        </Route>\n        <Route path=\"/photo/:id\" exact>\n          <Photo isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />\n        </Route>\n        <Route path=\"/post\" exact>\n          <Post isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />\n        </Route>\n        <Route path=\"/profile\" exact>\n          <Profile isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n\n      <App />\n    </BrowserRouter>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}