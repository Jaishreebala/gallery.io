[{"/Users/jaishreebala/Documents/Coding/web development/gallery.io/client/src/index.js":"1","/Users/jaishreebala/Documents/Coding/web development/gallery.io/client/src/App.js":"2","/Users/jaishreebala/Documents/Coding/web development/gallery.io/client/src/reportWebVitals.js":"3","/Users/jaishreebala/Documents/Coding/web development/gallery.io/client/src/components/Nav.js":"4","/Users/jaishreebala/Documents/Coding/web development/gallery.io/client/src/components/NotLoggedIn.js":"5","/Users/jaishreebala/Documents/Coding/web development/gallery.io/client/src/components/LoggedIn.js":"6","/Users/jaishreebala/Documents/Coding/web development/gallery.io/client/src/pages/Login.js":"7","/Users/jaishreebala/Documents/Coding/web development/gallery.io/client/src/components/Error.js":"8","/Users/jaishreebala/Documents/Coding/web development/gallery.io/client/src/pages/Register.js":"9","/Users/jaishreebala/Documents/Coding/web development/gallery.io/client/src/pages/Feed.js":"10","/Users/jaishreebala/Documents/Coding/web development/gallery.io/client/src/components/Imagecard.js":"11","/Users/jaishreebala/Documents/Coding/web development/gallery.io/client/src/pages/UserFeed.js":"12","/Users/jaishreebala/Documents/Coding/web development/gallery.io/client/src/components/UserImageCard.js":"13","/Users/jaishreebala/Documents/Coding/web development/gallery.io/client/src/pages/Photo.js":"14","/Users/jaishreebala/Documents/Coding/web development/gallery.io/client/src/pages/Post.js":"15","/Users/jaishreebala/Documents/Coding/web development/gallery.io/client/src/pages/Profile.js":"16","/Users/jaishreebala/Documents/Coding/web development/gallery.io/client/src/components/ProfileCard.js":"17"},{"size":573,"mtime":1609283503882,"results":"18","hashOfConfig":"19"},{"size":1773,"mtime":1609398690336,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1608769472623,"results":"21","hashOfConfig":"19"},{"size":690,"mtime":1609283703357,"results":"22","hashOfConfig":"19"},{"size":416,"mtime":1609282749727,"results":"23","hashOfConfig":"19"},{"size":855,"mtime":1609285237674,"results":"24","hashOfConfig":"19"},{"size":2473,"mtime":1609313582835,"results":"25","hashOfConfig":"19"},{"size":165,"mtime":1609284637340,"results":"26","hashOfConfig":"19"},{"size":3296,"mtime":1609286047542,"results":"27","hashOfConfig":"19"},{"size":1497,"mtime":1609319868562,"results":"28","hashOfConfig":"19"},{"size":1103,"mtime":1609373989335,"results":"29","hashOfConfig":"19"},{"size":1748,"mtime":1609321376585,"results":"30","hashOfConfig":"19"},{"size":1034,"mtime":1609322734718,"results":"31","hashOfConfig":"19"},{"size":6874,"mtime":1609402812354,"results":"32","hashOfConfig":"19"},{"size":3765,"mtime":1609402821421,"results":"33","hashOfConfig":"19"},{"size":1738,"mtime":1609400184301,"results":"34","hashOfConfig":"19"},{"size":1965,"mtime":1609400175913,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"a50iva",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"38"},"/Users/jaishreebala/Documents/Coding/web development/gallery.io/client/src/index.js",[],["78","79"],"/Users/jaishreebala/Documents/Coding/web development/gallery.io/client/src/App.js",[],"/Users/jaishreebala/Documents/Coding/web development/gallery.io/client/src/reportWebVitals.js",[],"/Users/jaishreebala/Documents/Coding/web development/gallery.io/client/src/components/Nav.js",[],"/Users/jaishreebala/Documents/Coding/web development/gallery.io/client/src/components/NotLoggedIn.js",[],"/Users/jaishreebala/Documents/Coding/web development/gallery.io/client/src/components/LoggedIn.js",[],"/Users/jaishreebala/Documents/Coding/web development/gallery.io/client/src/pages/Login.js",[],"/Users/jaishreebala/Documents/Coding/web development/gallery.io/client/src/components/Error.js",[],"/Users/jaishreebala/Documents/Coding/web development/gallery.io/client/src/pages/Register.js",[],"/Users/jaishreebala/Documents/Coding/web development/gallery.io/client/src/pages/Feed.js",["80","81"],"import React, { useState, useEffect } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport ImageCard from '../components/Imagecard'\nfunction Feed({ isLoggedIn }) {\n    const [photosData, setPhotosData] = useState([]);\n    const [query, setQuery] = useState(`api/v1/photo`);\n\n    useEffect(() => {\n        getPhotos();\n    }, [query])\n    const bearer = `Bearer ${localStorage.getItem('token')}`\n    console.log(bearer)\n    const getPhotos = async () => {\n        try {\n            const response = await fetch(query, {\n                method: 'GET',\n                withCredentials: true,\n                credentials: 'include',\n                headers: {\n                    'Authorization': bearer,\n                    'Content-Type': 'application/json'\n                }\n            })\n            const data = await response.json();\n            setPhotosData(data.data);\n            console.log(data)\n        } catch (err) {\n            console.log(err)\n        }\n\n    }\n    return (\n\n        <div className=\"feed\">\n            {!isLoggedIn ? <Redirect to=\"/login\" /> : \"\"}\n            {\n                photosData.map(photoData => { return <ImageCard key={photoData._id} id={photoData._id} photographerId={photoData.user._id} photographer={`${photoData.user.firstName} ${photoData.user.lastName}`} photo={photoData.photo} description={photoData.description} tags={photoData.workType} rating={photoData.averageRating} /> })\n            }\n        </div>\n    )\n}\n\nexport default Feed\n","/Users/jaishreebala/Documents/Coding/web development/gallery.io/client/src/components/Imagecard.js",["82"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport emptyStar from '../images/empty_star.svg';\nimport filledStar from '../images/filled_star.svg';\nfunction Imagecard({ id, photographer, photo, description, tags, rating, photographerId }) {\n    const starRenderer = () => {\n        let ratingRenderer = [];\n        for (let i = 0; i < 5; i++) {\n            if (i < Math.round(parseInt(rating))) {\n                ratingRenderer.push(<img key={i} src={filledStar} alt=\"filled star\" />)\n            }\n            else {\n                ratingRenderer.push(<img key={i} src={emptyStar} alt=\"empty star\" />)\n            }\n        }\n        return ratingRenderer;\n    }\n\n    return (\n        <div className=\"imageCard\">\n            <div className=\"card-desc\">\n                <Link to={`/feed/${photographerId}`}>{photographer}</Link>\n                <div className=\"star\"> {starRenderer()}</div>\n            </div>\n            <Link to={`/photo/${id}`}><img src={`${process.env.PUBLIC_URL}/uploadedImages/${photo}`} alt=\"Image\" /></Link>\n        </div>\n    )\n}\n\nexport default Imagecard\n","/Users/jaishreebala/Documents/Coding/web development/gallery.io/client/src/pages/UserFeed.js",["83","84"],"import React, { useState, useEffect } from 'react'\nimport { Redirect, Link } from 'react-router-dom'\nimport ImageCard from '../components/UserImageCard'\nimport { useParams } from 'react-router';\n\nfunction UserFeed({ isLoggedIn }) {\n    const { id } = useParams();\n\n    const [photosData, setPhotosData] = useState([]);\n    const [query, setQuery] = useState(`/api/v1/photo/user/${id}`);\n    useEffect(() => {\n        getPhotos();\n    }, [query])\n    const bearer = `Bearer ${localStorage.getItem('token')}`\n    console.log(bearer)\n    const getPhotos = async () => {\n        try {\n            const response = await fetch(query, {\n                method: 'GET',\n                withCredentials: true,\n                credentials: 'include',\n                headers: {\n                    'Authorization': bearer,\n                    'Content-Type': 'application/json'\n                }\n            })\n            const data = await response.json();\n            setPhotosData(data.data);\n            console.log(data)\n        } catch (err) {\n            console.log(err)\n        }\n\n    }\n\n    return (\n        <> {photosData.firstName && <>\n            <div className=\"heading\"><Link to={`/feed`}> Back</Link> <h1>Pictures uploaded by {photosData.firstName} {photosData.lastName}</h1></div>\n            <div className=\"feed\">\n                {!isLoggedIn ? <Redirect to=\"/login\" /> : \"\"}\n                {\n                    photosData.images.map(photoData => { return <ImageCard key={photoData._id} id={photoData._id} photo={photoData.photo} description={photoData.description} tags={photoData.workType} rating={photoData.averageRating} /> })\n                }\n            </div>\n        </>\n        }\n        </>\n    )\n}\n\nexport default UserFeed\n","/Users/jaishreebala/Documents/Coding/web development/gallery.io/client/src/components/UserImageCard.js",["85"],"import React from 'react'\nimport emptyStar from '../images/empty_star.svg';\nimport filledStar from '../images/filled_star.svg';\n\nfunction UserImageCard({ id, photo, description, tags, rating }) {\n    const starRenderer = () => {\n        let ratingRenderer = [];\n        for (let i = 0; i < 5; i++) {\n            if (i < Math.round(parseInt(rating))) {\n                ratingRenderer.push(<img key={i} src={filledStar} alt=\"filled star\" />)\n            }\n            else {\n                ratingRenderer.push(<img key={i} src={emptyStar} alt=\"empty star\" />)\n            }\n        }\n        return ratingRenderer;\n    }\n\n    return (\n        <div className=\"imageCard\">\n            <div className=\"card-desc\">\n                <div className=\"star\"> {starRenderer()}</div>\n                <a href={`${process.env.PUBLIC_URL}/uploadedImages/${photo}`} download>Download</a>\n            </div>\n            <img src={`${process.env.PUBLIC_URL}/uploadedImages/${photo}`} alt=\"Image\" />\n        </div>\n    )\n}\n\nexport default UserImageCard\n","/Users/jaishreebala/Documents/Coding/web development/gallery.io/client/src/pages/Photo.js",["86","87"],"import React, { useState, useEffect, useRef } from 'react'\nimport { useParams } from 'react-router';\nimport emptyStar from '../images/empty_star.svg';\nimport filledStar from '../images/filled_star.svg';\nimport { useHistory, Redirect } from 'react-router-dom'\nimport Error from '../components/Error';\n\nfunction Photo({ isLoggedIn }) {\n    const { id } = useParams();\n    const history = useHistory()\n    const [photoData, setPhotoData] = useState([]);\n    const [userRating, setUserRating] = useState([0, 0, 0, 0, 0]);\n    const [rerender, setRerender] = useState(false)\n    const [errors, setErrors] = useState(\"\");\n    const [query, setQuery] = useState(`/api/v1/photo/${id}`);\n\n    const bearer = `Bearer ${localStorage.getItem('token')}`\n    const commentRef = useRef();\n    useEffect(() => {\n        loadPhoto();\n    }, [query, rerender])\n    const loadPhoto = async () => {\n        try {\n            const response = await fetch(query, {\n                method: 'GET',\n                withCredentials: true,\n                credentials: 'include',\n                headers: {\n                    'Authorization': bearer,\n                    'Content-Type': 'application/json'\n                }\n            })\n            const data = await response.json();\n            setPhotoData(data.data);\n        } catch (err) {\n            console.log(err)\n        }\n    }\n    const starRenderer = (rating) => {\n        let ratingRenderer = [];\n        for (let i = 0; i < 5; i++) {\n            if (i < Math.round(parseInt(rating))) {\n                ratingRenderer.push(<img key={i} src={filledStar} alt=\"filled star\" />)\n            }\n            else {\n                ratingRenderer.push(<img key={i} src={emptyStar} alt=\"empty star\" />)\n            }\n        }\n        return ratingRenderer;\n    }\n    const submitCommentHandler = async () => {\n        if (isLoggedIn) {\n            if (commentRef.current.value.length) {\n                try {\n                    const response = await fetch(`/api/v1/comments/${id}`, {\n                        method: \"POST\",\n                        body: JSON.stringify({\n                            comment: commentRef.current.value\n                        }),\n                        headers: {\n                            'Authorization': bearer,\n                            'Content-Type': \"application/json; charset=UTF-8\"\n                        }\n                    })\n                    const data = await response.json();\n                    setErrors(\"\");\n                    if (data.success) {\n                        setQuery(query)\n                        setRerender(!rerender)\n                    }\n                    else {\n                        setErrors(data.error)\n                    }\n\n                } catch (err) {\n                    setErrors(err)\n                }\n            }\n            else {\n                setErrors(\"Comments can't be empty\")\n            }\n            commentRef.current.value = \"\"\n        }\n        else {\n            history.push(\"/login\");\n        }\n    }\n    const submitReviewHandler = async (rating) => {\n        if (isLoggedIn) {\n\n            try {\n                const response = await fetch(`/api/v1/comments/${id}`, {\n                    method: \"POST\",\n                    body: JSON.stringify({\n                        rating: rating\n                    }),\n                    headers: {\n                        'Authorization': bearer,\n                        \"Content-type\": \"application/json; charset=UTF-8\"\n                    }\n                })\n                const data = await response.json();\n                if (data.success) {\n                }\n            } catch (err) {\n                console.log(err)\n            }\n        } else {\n            history.push(\"/login\");\n        }\n    }\n    const mouseOverStar = (index) => {\n        for (let i = 0; i < 5; i++) {\n            if (i <= index) {\n                userRating[i] = 1;\n            }\n            else {\n                userRating[i] = 0;\n            }\n        }\n        setUserRating(userRating)\n        setRerender(!rerender)\n    }\n\n    return (\n        <>\n            {photoData.user &&\n                <div className=\"photo\">\n                    {!isLoggedIn ? <Redirect to=\"/login\" /> : \"\"}\n                    <img src={`${process.env.PUBLIC_URL}/uploadedImages/${photoData.photo}`} alt=\"Image\" />\n                    <div className=\"menu\">\n                        <div className=\"desc\"> {photoData.description} </div>\n                        <div className=\"user\"> Clicked By {photoData.user.firstName} {photoData.user.lastName}  </div>\n                        <div className=\"desc\"><a href={`${process.env.PUBLIC_URL}/uploadedImages/${photoData.photo}`} download>Download</a></div>\n                        <div className=\"star\"> {starRenderer(photoData.averageRating)}</div>\n                        <h1>Comments</h1>\n                        {photoData.comments.map(comment => {\n                            if (comment.comment) {\n                                return <div key={comment._id} className=\"comment\">\n                                    <div className=\"commentName\">\n                                        {comment.user.firstName} {comment.user.lastName}\n                                    </div>\n                                    <div className=\"commentDesc\">\n                                        {comment.comment}\n                                    </div>\n                                </div>\n                            }\n                            return \"\";\n                        }\n                        )}\n                        <div className=\"userInputSection\">\n                            <Error error={errors} />\n                            <div className=\"borderInput\">\n                                <input type=\"text\" placeholder=\"Leave A Comment\" ref={commentRef} />\n                                <div onClick={submitCommentHandler}>Post</div>\n                            </div>\n\n                            <div className=\"inputRating\">\n                                <span>Leave A Rating:</span>\n\n                                {userRating.map((rating, i) =>\n                                    <img onClick={() => submitReviewHandler(i + 1)}\n                                        onMouseOver={() => mouseOverStar(i)} key={i} src={rating ? filledStar : emptyStar}\n                                        onMouseLeave={() => {\n                                            setUserRating([0, 0, 0, 0, 0]); setRerender(!rerender);\n                                        }}\n                                        alt=\"empty star\" />)\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            }\n        </>\n    )\n}\n\nexport default Photo\n","/Users/jaishreebala/Documents/Coding/web development/gallery.io/client/src/pages/Post.js",[],"/Users/jaishreebala/Documents/Coding/web development/gallery.io/client/src/pages/Profile.js",["88","89"],"import React, { useState, useEffect } from 'react'\nimport { Redirect, Link } from 'react-router-dom'\nimport ImageCard from '../components/ProfileCard'\n\nfunction Profile({ isLoggedIn }) {\n\n    const [photosData, setPhotosData] = useState([]);\n    const [query, setQuery] = useState(`api/v1/auth/getMe`);\n    const [rerender, setRerender] = useState(false)\n\n    useEffect(() => {\n        getPhotos();\n    }, [query, rerender])\n    const bearer = `Bearer ${localStorage.getItem('token')}`\n    const getPhotos = async () => {\n        try {\n            const response = await fetch(query, {\n                method: 'GET',\n                withCredentials: true,\n                credentials: 'include',\n                headers: {\n                    'Authorization': bearer,\n                    'Content-Type': 'application/json'\n                }\n            })\n            const data = await response.json();\n            setPhotosData(data.data);\n            console.log(data)\n        } catch (err) {\n            console.log(err)\n        }\n\n    }\n    return (\n        <>{photosData.images &&\n            <div>\n                <div className=\"heading\"><Link to={`/post`}> Back</Link> <h1>My Profile: {photosData.firstName} {photosData.lastName}</h1> </div>\n                <div className=\"feed\">\n                    {!isLoggedIn ? <Redirect to=\"/login\" /> : \"\"}\n                    {\n                        photosData.images.map(photoData => { return <ImageCard key={photoData._id} id={photoData._id} isLoggedIn={isLoggedIn} photo={photoData.photo} rating={photoData.averageRating} rerender={rerender} setRerender={setRerender} /> })\n                    }\n                </div>\n            </div>}\n        </>\n    )\n}\n\nexport default Profile\n","/Users/jaishreebala/Documents/Coding/web development/gallery.io/client/src/components/ProfileCard.js",["90","91"],"import React, { useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport emptyStar from '../images/empty_star.svg';\nimport filledStar from '../images/filled_star.svg';\n\nfunction ProfileCard({ id, photo, rating, isLoggedIn, rerender, setRerender }) {\n    const history = useHistory()\n\n    const bearer = `Bearer ${localStorage.getItem('token')}`\n\n    const starRenderer = () => {\n        let ratingRenderer = [];\n        for (let i = 0; i < 5; i++) {\n            if (i < Math.round(parseInt(rating))) {\n                ratingRenderer.push(<img key={i} src={filledStar} alt=\"filled star\" />)\n            }\n            else {\n                ratingRenderer.push(<img key={i} src={emptyStar} alt=\"empty star\" />)\n            }\n        }\n        return ratingRenderer;\n    }\n    const deletePictureHandler = async () => {\n        if (isLoggedIn) {\n\n            try {\n                const response = await fetch(`/api/v1/photo/${id}`, {\n                    method: \"DELETE\",\n                    headers: {\n                        'Authorization': bearer,\n                        'Content-Type': \"application/json; charset=UTF-8\"\n                    }\n                })\n                const data = await response.json();\n                if (data.success) {\n                    setRerender(!rerender);\n                    console.log(\"success\")\n                }\n\n            } catch (err) {\n                console.log(err);\n            }\n        }\n        else {\n            history.push(\"/login\");\n        }\n    }\n    return (\n        <div className=\"imageCard\">\n            <div className=\"card-desc\">\n                <div className=\"error\" onClick={deletePictureHandler}>Delete</div>\n                <div className=\"star\"> {starRenderer()}</div>\n            </div>\n            <Link to={`/photo/${id}`}><img src={`${process.env.PUBLIC_URL}/uploadedImages/${photo}`} alt=\"Image\" /></Link>\n        </div>\n    )\n}\n\nexport default ProfileCard\n",{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":6,"column":19,"nodeType":"98","messageId":"99","endLine":6,"endColumn":27},{"ruleId":"100","severity":1,"message":"101","line":10,"column":8,"nodeType":"102","endLine":10,"endColumn":15,"suggestions":"103"},{"ruleId":"104","severity":1,"message":"105","line":25,"column":39,"nodeType":"106","endLine":25,"endColumn":116},{"ruleId":"96","severity":1,"message":"97","line":10,"column":19,"nodeType":"98","messageId":"99","endLine":10,"endColumn":27},{"ruleId":"100","severity":1,"message":"101","line":13,"column":8,"nodeType":"102","endLine":13,"endColumn":15,"suggestions":"107"},{"ruleId":"104","severity":1,"message":"105","line":25,"column":13,"nodeType":"106","endLine":25,"endColumn":90},{"ruleId":"100","severity":1,"message":"108","line":21,"column":8,"nodeType":"102","endLine":21,"endColumn":25,"suggestions":"109"},{"ruleId":"104","severity":1,"message":"105","line":130,"column":21,"nodeType":"106","endLine":130,"endColumn":108},{"ruleId":"96","severity":1,"message":"97","line":8,"column":19,"nodeType":"98","messageId":"99","endLine":8,"endColumn":27},{"ruleId":"100","severity":1,"message":"101","line":13,"column":8,"nodeType":"102","endLine":13,"endColumn":25,"suggestions":"110"},{"ruleId":"96","severity":1,"message":"111","line":1,"column":17,"nodeType":"98","messageId":"99","endLine":1,"endColumn":25},{"ruleId":"104","severity":1,"message":"105","line":54,"column":39,"nodeType":"106","endLine":54,"endColumn":116},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'setQuery' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPhotos'. Either include it or remove the dependency array.","ArrayExpression",["114"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["115"],"React Hook useEffect has a missing dependency: 'loadPhoto'. Either include it or remove the dependency array.",["116"],["117"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},{"desc":"118","fix":"120"},{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},"Update the dependencies array to be: [getPhotos, query]",{"range":"125","text":"126"},{"range":"127","text":"126"},"Update the dependencies array to be: [loadPhoto, query, rerender]",{"range":"128","text":"129"},"Update the dependencies array to be: [getPhotos, query, rerender]",{"range":"130","text":"131"},[336,343],"[getPhotos, query]",[437,444],[824,841],"[loadPhoto, query, rerender]",[406,423],"[getPhotos, query, rerender]"]